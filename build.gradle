plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

def selenideVersion = "6.19.1",
    allureVersion = "2.21.0",
    junitVersion = "5.10.1"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

compileJava {
    options.encoding = 'UTF-8'
}
compileTestJava {
    options.encoding = 'UTF-8'
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.appium:java-client:8.3.0",
            "org.aeonbits.owner:owner:1.0.12",
            "commons-io:commons-io:2.20.0",
            "io.rest-assured:rest-assured:5.3.0",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:2.0.7"
    )
}

test {
    useJUnitPlatform()
    systemProperties(System.getProperties())
}

tasks.withType(Test) {
    systemProperty "console.encoding", "UTF-8"
    testLogging {
        events "started", "skipped", "failed", "standard_error", "standard_out"
        exceptionFormat "short"
        showStandardStreams = true
    }
}

tasks.register('browserstack_tests', Test) {
    useJUnitPlatform {
        includeTags("browserstack")
    }
}

tasks.register('emulation_tests', Test) {
    useJUnitPlatform {
        includeTags("emulation")
    }
}